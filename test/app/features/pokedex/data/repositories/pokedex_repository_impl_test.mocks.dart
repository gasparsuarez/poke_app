// Mocks generated by Mockito 5.4.4 from annotations
// in poke_app/test/app/features/pokedex/data/repositories/pokedex_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:flutter/material.dart' as _i10;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;
import 'package:poke_app/app/core/network/client/api_client.dart' as _i2;
import 'package:poke_app/app/features/pokedex/data/datasources/pokedex_datasource.dart'
    as _i6;
import 'package:poke_app/app/features/pokedex/data/models/pokedex_model.dart'
    as _i3;
import 'package:poke_app/app/features/pokedex/data/models/pokemon_model.dart'
    as _i4;
import 'package:poke_app/app/features/pokedex/domain/entities/pokedex.dart'
    as _i5;
import 'package:poke_app/app/features/pokedex/domain/entities/raw_pokemon.dart'
    as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeApiClient_0 extends _i1.SmartFake implements _i2.ApiClient {
  _FakeApiClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePokedexModel_1 extends _i1.SmartFake implements _i3.PokedexModel {
  _FakePokedexModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePokemonModel_2 extends _i1.SmartFake implements _i4.PokemonModel {
  _FakePokemonModel_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePokedex_3 extends _i1.SmartFake implements _i5.Pokedex {
  _FakePokedex_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PokedexDatasourceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockPokedexDatasourceImpl extends _i1.Mock
    implements _i6.PokedexDatasourceImpl {
  @override
  _i2.ApiClient get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeApiClient_0(
          this,
          Invocation.getter(#client),
        ),
        returnValueForMissingStub: _FakeApiClient_0(
          this,
          Invocation.getter(#client),
        ),
      ) as _i2.ApiClient);

  @override
  _i7.Future<_i3.PokedexModel> getPokemonList({int? limit = 50}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPokemonList,
          [],
          {#limit: limit},
        ),
        returnValue: _i7.Future<_i3.PokedexModel>.value(_FakePokedexModel_1(
          this,
          Invocation.method(
            #getPokemonList,
            [],
            {#limit: limit},
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.PokedexModel>.value(_FakePokedexModel_1(
          this,
          Invocation.method(
            #getPokemonList,
            [],
            {#limit: limit},
          ),
        )),
      ) as _i7.Future<_i3.PokedexModel>);

  @override
  _i7.Future<_i4.PokemonModel> getPokemonById({required String? id}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPokemonById,
          [],
          {#id: id},
        ),
        returnValue: _i7.Future<_i4.PokemonModel>.value(_FakePokemonModel_2(
          this,
          Invocation.method(
            #getPokemonById,
            [],
            {#id: id},
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.PokemonModel>.value(_FakePokemonModel_2(
          this,
          Invocation.method(
            #getPokemonById,
            [],
            {#id: id},
          ),
        )),
      ) as _i7.Future<_i4.PokemonModel>);
}

/// A class which mocks [PokedexModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockPokedexModel extends _i1.Mock implements _i3.PokedexModel {
  @override
  String get nextPage => (super.noSuchMethod(
        Invocation.getter(#nextPage),
        returnValue: _i8.dummyValue<String>(
          this,
          Invocation.getter(#nextPage),
        ),
        returnValueForMissingStub: _i8.dummyValue<String>(
          this,
          Invocation.getter(#nextPage),
        ),
      ) as String);

  @override
  List<_i9.RawPokemon> get results => (super.noSuchMethod(
        Invocation.getter(#results),
        returnValue: <_i9.RawPokemon>[],
        returnValueForMissingStub: <_i9.RawPokemon>[],
      ) as List<_i9.RawPokemon>);

  @override
  _i5.Pokedex copyWith({
    String? nextPage,
    _i10.ValueGetter<String?>? previousPage,
    List<_i9.RawPokemon>? results,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #copyWith,
          [],
          {
            #nextPage: nextPage,
            #previousPage: previousPage,
            #results: results,
          },
        ),
        returnValue: _FakePokedex_3(
          this,
          Invocation.method(
            #copyWith,
            [],
            {
              #nextPage: nextPage,
              #previousPage: previousPage,
              #results: results,
            },
          ),
        ),
        returnValueForMissingStub: _FakePokedex_3(
          this,
          Invocation.method(
            #copyWith,
            [],
            {
              #nextPage: nextPage,
              #previousPage: previousPage,
              #results: results,
            },
          ),
        ),
      ) as _i5.Pokedex);
}
